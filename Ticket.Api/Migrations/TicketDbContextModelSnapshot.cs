// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ticket.Api.DAL;

#nullable disable

namespace Ticket.Api.Migrations
{
    [DbContext(typeof(TicketDbContext))]
    partial class TicketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Ticket.Api.Models.Clientes", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clave")
                        .HasColumnType("TEXT");

                    b.Property<int>("ConfiguracionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombres")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("ClienteId")
                        .HasName("PK__Clientes__71ABD087B375C419");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            Clave = "Samuel23",
                            ConfiguracionId = 13,
                            Nombres = "Samuel"
                        },
                        new
                        {
                            ClienteId = 2,
                            Clave = "Rafa23",
                            ConfiguracionId = 13,
                            Nombres = "Rafa"
                        },
                        new
                        {
                            ClienteId = 3,
                            Clave = "Jeison23",
                            ConfiguracionId = 13,
                            Nombres = "Jeison"
                        },
                        new
                        {
                            ClienteId = 4,
                            Clave = "Enel23",
                            ConfiguracionId = 13,
                            Nombres = "Enel"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Configuraciones", b =>
                {
                    b.Property<int>("ConfiguracionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ColorSchemeIndex")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Theme")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConfiguracionId");

                    b.ToTable("Configuraciones");

                    b.HasData(
                        new
                        {
                            ConfiguracionId = 1,
                            ColorSchemeIndex = 0,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 2,
                            ColorSchemeIndex = 1,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 3,
                            ColorSchemeIndex = 2,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 4,
                            ColorSchemeIndex = 3,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 5,
                            ColorSchemeIndex = 4,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 6,
                            ColorSchemeIndex = 5,
                            Theme = 0
                        },
                        new
                        {
                            ConfiguracionId = 7,
                            ColorSchemeIndex = 0,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 8,
                            ColorSchemeIndex = 1,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 9,
                            ColorSchemeIndex = 2,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 10,
                            ColorSchemeIndex = 3,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 11,
                            ColorSchemeIndex = 4,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 12,
                            ColorSchemeIndex = 5,
                            Theme = 1
                        },
                        new
                        {
                            ConfiguracionId = 13,
                            ColorSchemeIndex = 0,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 14,
                            ColorSchemeIndex = 1,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 15,
                            ColorSchemeIndex = 2,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 16,
                            ColorSchemeIndex = 3,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 17,
                            ColorSchemeIndex = 4,
                            Theme = 2
                        },
                        new
                        {
                            ConfiguracionId = 18,
                            ColorSchemeIndex = 5,
                            Theme = 2
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Estatus", b =>
                {
                    b.Property<int>("EstatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Estatus1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("Estatus");

                    b.HasKey("EstatusId")
                        .HasName("PK__Estatus__DE10F58DA375F6EC");

                    b.ToTable("Estatus", (string)null);

                    b.HasData(
                        new
                        {
                            EstatusId = 1,
                            Estatus1 = "Nuevo"
                        },
                        new
                        {
                            EstatusId = 2,
                            Estatus1 = "En proceso"
                        },
                        new
                        {
                            EstatusId = 3,
                            Estatus1 = "Cerrado"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Prioridades", b =>
                {
                    b.Property<int>("PrioridadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Prioridad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.HasKey("PrioridadId")
                        .HasName("PK__Priorida__3939172E0518F8F3");

                    b.ToTable("Prioridades");

                    b.HasData(
                        new
                        {
                            PrioridadId = 1,
                            Prioridad = "Baja"
                        },
                        new
                        {
                            PrioridadId = 2,
                            Prioridad = "Normal"
                        },
                        new
                        {
                            PrioridadId = 3,
                            Prioridad = "Media"
                        },
                        new
                        {
                            PrioridadId = 4,
                            Prioridad = "Alta"
                        },
                        new
                        {
                            PrioridadId = 5,
                            Prioridad = "Emergencia"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Respuestas", b =>
                {
                    b.Property<int>("RespuestaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientesClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("Respuesta")
                        .HasColumnType("TEXT");

                    b.Property<int?>("TicketId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TicketsTicketId")
                        .HasColumnType("INTEGER");

                    b.HasKey("RespuestaId");

                    b.HasIndex("ClientesClienteId");

                    b.HasIndex("TicketsTicketId");

                    b.ToTable("Respuestas");
                });

            modelBuilder.Entity("Ticket.Api.Models.Sistemas", b =>
                {
                    b.Property<int>("SistemaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Sistema")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("Sistema");

                    b.HasKey("SistemaId")
                        .HasName("PK__Sistemas__4C36BB868F17E7A9");

                    b.ToTable("Sistemas");

                    b.HasData(
                        new
                        {
                            SistemaId = 1,
                            Sistema = "Ventas SS"
                        },
                        new
                        {
                            SistemaId = 2,
                            Sistema = "SS Office"
                        },
                        new
                        {
                            SistemaId = 3,
                            Sistema = "SS Rent Reporter"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Tickets", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ClientesClienteId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Especificaciones")
                        .IsUnicode(false)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EstatusId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FechaFinalizado")
                        .HasColumnType("datetime");

                    b.Property<int?>("Orden")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PrioridadId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PrioridadesPrioridadId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SistemaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SistemasSistemaId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TipoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TiposTipoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("TicketId")
                        .HasName("PK__eTicket__712CC6070A90FFD9");

                    b.HasIndex("ClientesClienteId");

                    b.HasIndex("EstatusId");

                    b.HasIndex("PrioridadesPrioridadId");

                    b.HasIndex("SistemasSistemaId");

                    b.HasIndex("TiposTipoId");

                    b.ToTable("eTicket", (string)null);
                });

            modelBuilder.Entity("Ticket.Api.Models.Tipos", b =>
                {
                    b.Property<int>("TipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("TEXT")
                        .HasColumnName("Tipo");

                    b.HasKey("TipoId")
                        .HasName("PK__Tipos__97099EB7224F755C");

                    b.ToTable("Tipos");

                    b.HasData(
                        new
                        {
                            TipoId = 1,
                            Tipo = "Problemas"
                        },
                        new
                        {
                            TipoId = 2,
                            Tipo = "Sugerencia"
                        },
                        new
                        {
                            TipoId = 3,
                            Tipo = "Soporte Directo"
                        },
                        new
                        {
                            TipoId = 4,
                            Tipo = "Otros"
                        });
                });

            modelBuilder.Entity("Ticket.Api.Models.Respuestas", b =>
                {
                    b.HasOne("Ticket.Api.Models.Clientes", null)
                        .WithMany("Respuestas")
                        .HasForeignKey("ClientesClienteId");

                    b.HasOne("Ticket.Api.Models.Tickets", null)
                        .WithMany("Respuestas")
                        .HasForeignKey("TicketsTicketId");
                });

            modelBuilder.Entity("Ticket.Api.Models.Tickets", b =>
                {
                    b.HasOne("Ticket.Api.Models.Clientes", null)
                        .WithMany("Tickets")
                        .HasForeignKey("ClientesClienteId");

                    b.HasOne("Ticket.Api.Models.Estatus", null)
                        .WithMany("Tickets")
                        .HasForeignKey("EstatusId");

                    b.HasOne("Ticket.Api.Models.Prioridades", null)
                        .WithMany("Tickets")
                        .HasForeignKey("PrioridadesPrioridadId");

                    b.HasOne("Ticket.Api.Models.Sistemas", null)
                        .WithMany("Tickets")
                        .HasForeignKey("SistemasSistemaId");

                    b.HasOne("Ticket.Api.Models.Tipos", null)
                        .WithMany("Tickets")
                        .HasForeignKey("TiposTipoId");
                });

            modelBuilder.Entity("Ticket.Api.Models.Clientes", b =>
                {
                    b.Navigation("Respuestas");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Ticket.Api.Models.Estatus", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Ticket.Api.Models.Prioridades", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Ticket.Api.Models.Sistemas", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Ticket.Api.Models.Tickets", b =>
                {
                    b.Navigation("Respuestas");
                });

            modelBuilder.Entity("Ticket.Api.Models.Tipos", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
